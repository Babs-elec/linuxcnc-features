
O<draw-multipass> SUB
	(Sets #<_draw_z> to next depth step)
	(Uses #<_z> and global cutting parameters)
	O<draw-multipass-if> IF [#<_z> GT [#<_global_depth>+#<_global_final>*#<_global_final_num>]]
		#<_draw_z> = [#<_z> - #<_global_depth_step>]
		O<draw-multipass-if-01> IF [#<_draw_z> LT [#<_global_depth>+#<_global_final>*#<_global_final_num>]]
			#<_draw_z> = [#<_global_depth>+#<_global_final>*#<_global_final_num>]
		O<draw-multipass-if-01> ENDIF
		(debug, mult 1) 
	O<draw-multipass-if> ELSE 
		#<_draw_z> = [#<_z> - #<_global_final>]
		(debug, mult 2) 
	O<draw-multipass-if> ENDIF
	O<draw-multipass-if-02> IF [#<_draw_z> LE #<_global_depth> AND #<_draw_last_pass> EQ 0  AND #<_draw_stage> GT 1]
		#<_draw_z> = #<_global_depth>
		#<_draw_l> = #<_draw_length>	
		#<_draw_last_pass> = 1 (last pass)	
		(debug, mult 3  IF [#<_draw_z> LT #<_global_depth> AND #<_draw_last_pass> EQ 0  AND #<_draw_stage> gt 1]) 
	O<draw-multipass-if-02> ENDIF
	O<draw-multipass-if-03> IF [#<_draw_last_pass> EQ 0]
		#<_draw_l> = #<_draw_length>
		(debug, multipass)
		(debug, mult 4) 
	O<draw-multipass-if-03> ENDIF
	
O<draw-multipass> ENDSUB

(Draw line)
O<draw-line-to> SUB
	(adds line to in relative coords)
	#<x> = #1
	#<y> = #2
	#<l> = SQRT[#<x>**2 + #<y>**2] 
	O<draw-line-if> IF [#<_draw_stage> EQ 1] (Just get length)
		#<_draw_length> = [ #<_draw_length> + #<l> ]
		
	O<draw-line-if> ELSEIF [#<l> GT 0] (here comes the cut)
		(Get depth if needed)
		O<draw-line-if-01> IF [#<_draw_l> LE 0 AND #<_z> GT #<_global_depth> ] (Cut next layer)
			O<draw-multipass> CALL
		O<draw-line-if-01> ENDIF	
		
		(Check len needed to penetrate to next pass)
		#<_pl> = [[#<_z>-#<_draw_z>]/TAN[#<_global_penetration>]]

		(Penetrate)
		O<draw-line-if-03> IF [#<_pl> GT 0 ]
			(Penetrate and then call cut)
			#<k1> = [#<_pl>/#<l>]
			O<draw-line-if-05> IF [#<k1> GT 1] 
				#<k1> = 1
			O<draw-line-if-05> ENDIF
			G01 X[#<_x>+#<x>*#<k1>] Y[#<_y>+#<y>*#<k1>] Z[#<_z> - #<l>*#<k1>*TAN[#<_global_penetration>] ]
			O<draw-line-to> CALL [ #<x>-#<x>*#<k1> ]  [ #<y>-#<y>*#<k1> ] 
		O<draw-line-if-03> ELSEIF [#<_draw_l> GT 0 OR #<_z> GT #<_global_depth> ]
			(debug, #<_draw_l> GT 0 OR #<_z> GT #<_global_depth>)
			(Just cut)
			O<draw-line-if-04> IF [#<l> GT #<_draw_l>] (Cut but not to the end)
				#<k1> = [#<_draw_l>/#<l>]
				G01 X[#<_x>+#<x>*#<k1>] Y[#<_y>+#<y>*#<k1>]
				#<_draw_l> = [#<_draw_l> - #<l>]				
				(Next layer)
				O<draw-multipass> CALL
				O<draw-line-to> CALL [ #<x>-#<x>*#<k1> ]  [ #<y>-#<y>*#<k1> ] 
			O<draw-line-if-04> ELSE (Cut)
				G01 X[#<_x>+#<x>] Y[#<_y>+#<y>]
				#<_draw_l> = [#<_draw_l> - #<l>]
			O<draw-line-if-04> ENDIF
		O<draw-line-if-03> ENDIF	
	O<draw-line-if> ENDIF
O<draw-line-to> ENDSUB




(   Mill deafults )
	G17

	#<_global_surface> = 40
	#<_global_depth> = -10
	#<_global_depth_step> = 10
	#<_global_feed> = 1000
	#<_global_spindle> = 1000
	#<_global_rappid> = 70

	#<_global_final> = 1
	#<_global_final_num> = 2
	#<_global_final_feed> = 1000
	#<_global_final_spindle> = 1000

	F#<_global_feed>
	S#<_global_spindle>
( / Mill deafults )

(   defaults.ngc )

	(Probe defaults)
	#<_global_probe_func> = 38.2
	#<_paranoid> = 1
	
	#<_global_flood> = 1
	#<_global_mist> = 0
	
	( Flood sub - turns on flood/mist depending on global parameters. )
	O<flood> SUB  
		O<flood-if-01>IF [#<_global_flood>]
			M7
		O<flood-if-01>ENDIF
		O<flood-if-02>IF [#<_global_mist>]
			M8
		O<flood-if-02>ENDIF
	O<flood> ENDSUB  

( / defaults.ngc )
O<flood> call

#<_global_penetration> = 80
#<_global_depth> = -10
#<_global_depth_step> = 1000
#<_draw_stage> = 1
#<_draw_l> = 0
G0 Z20
G1 X0 Y0
G1 X10
#<_draw_z> = #<_global_surface>
#<_draw_length> = 0
#<_draw_last_pass> = 0
O<draw> WHILE [[#<_z> GE #<_global_depth> OR #<_draw_l> GT 0]]
	O<draw-line-to> CALL [10] [0]
	O<draw-line-to> CALL [0] [10]
	O<draw-line-to> CALL [-10] [-10]

;	O<draw-line-to> CALL [10] [0]
;	O<draw-line-to> CALL [0] [10]
;	O<draw-line-to> CALL [10] [0]	
;	O<draw-line-to> CALL [0] [-10]
;	O<draw-line-to> CALL [10] [0]	
;	O<draw-line-to> CALL [0] [20]
;	O<draw-line-to> CALL [-30] [0]
;	O<draw-line-to> CALL [0] [-20]

	#<_draw_stage> = 2
O<draw> ENDWHILE 


M02
