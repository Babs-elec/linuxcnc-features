[SUBROUTINE]
icon = icons/circular-array.png
name = Circular array
image = images/circular-array.png
type = Circular array
help = 	<big>Create array of items</big>
		Drag and drop subroutines into Items parameter.
		Parameters num, dX, dY, dZ
		Modifies defined coordinate system to make offsets! Returns to G54 afterwards!

[PARAM_0]
name = Number
type = int
icon = icons/rect.png
tool_tip = Number of copies
value = 6

[PARAM_1]
name = cX
type = float
icon = icons/center.png
tool_tip = X of array center
value = 0

[PARAM_2]
name = cY
type = float
icon = icons/center.png
tool_tip = Y of array center
value = 0

[PARAM_3]
name = D
type = float
icon = icons/diameter.png
tool_tip = Array diameter
value = 100

[PARAM_4]
name = Start angle
type = float
icon = icons/angle.png
tool_tip = Angle for the first array item (0 points to X positive direction)
value = 0

[PARAM_5]
name = Full angle
type = float
icon = icons/angle.png
tool_tip = Angle to fill with array
value = 360

[PARAM_6]
name = Coordinate system G
type = string
tool_tip = Angle to fill with array
value = 57

[PARAM_7]
name = Rotate
type = bool
tool_tip = Rotate each item (1=Rotate, 0=No)
value = 1



[PARAM_8]
name = Items
type = items
icon = icons/items.png
tool_tip = Drop Subroutines here


[DEFINITIONS]
content = 

[CALL]
content = 

[BEFORE]
content = 
	(Circular Array)
	#<<eval>self.get_attr("id")</eval>-ang> = #param_4
	G[#param_6]
	; full id of feature is used to make able array of array's
	O<<eval>self.get_attr("id")</eval>> REPEAT [#param_0]
		; move and rotate coordinates
		O<<eval>self.get_attr("id")</eval>-if> IF [#param_7] 	
			G10 L2 P[#param_6-53]  X[COS[#<<eval>self.get_attr("id")</eval>-ang>]*#param_3/2 + #param_1] Y[SIN[#<<eval>self.get_attr("id")</eval>-ang>]*#param_3/2 + #param_2] R#<<eval>self.get_attr("id")</eval>-ang> 
		O<<eval>self.get_attr("id")</eval>-if> ELSE 
			G10 L2 P[#param_6-53]  X[COS[#<<eval>self.get_attr("id")</eval>-ang>]*#param_3/2 + #param_1] Y[SIN[#<<eval>self.get_attr("id")</eval>-ang>]*#param_3/2 + #param_2]  
		O<<eval>self.get_attr("id")</eval>-if> ENDIF 

		; array body
		
[AFTER]
content = 
		; angle increment
		#<<eval>self.get_attr("id")</eval>-ang> = [#<<eval>self.get_attr("id")</eval>-ang>+#param_5/#param_0]
	O<<eval>self.get_attr("id")</eval>> ENDREPEAT
	G54 
	(End Circular Array)
